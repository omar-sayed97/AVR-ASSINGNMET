
interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000242  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000296  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000296  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002c8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000f0  00000000  00000000  00000304  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a63  00000000  00000000  000003f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006c4  00000000  00000000  00000e57  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000591  00000000  00000000  0000151b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001b8  00000000  00000000  00001aac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000408  00000000  00000000  00001c64  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003d0  00000000  00000000  0000206c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  0000243c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__vector_3>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 f6 00 	call	0x1ec	; 0x1ec <main>
  64:	0c 94 1f 01 	jmp	0x23e	; 0x23e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_SetPinDir>:
		case DIO_PORTD :
		val = GET_BIT(PIND,pin);
		break;
	}
	return val;
}
  6c:	44 23       	and	r20, r20
  6e:	d1 f1       	breq	.+116    	; 0xe4 <DIO_SetPinDir+0x78>
  70:	41 30       	cpi	r20, 0x01	; 1
  72:	09 f0       	breq	.+2      	; 0x76 <DIO_SetPinDir+0xa>
  74:	6e c0       	rjmp	.+220    	; 0x152 <DIO_SetPinDir+0xe6>
  76:	81 30       	cpi	r24, 0x01	; 1
  78:	91 f0       	breq	.+36     	; 0x9e <DIO_SetPinDir+0x32>
  7a:	28 f0       	brcs	.+10     	; 0x86 <DIO_SetPinDir+0x1a>
  7c:	82 30       	cpi	r24, 0x02	; 2
  7e:	d9 f0       	breq	.+54     	; 0xb6 <DIO_SetPinDir+0x4a>
  80:	83 30       	cpi	r24, 0x03	; 3
  82:	29 f1       	breq	.+74     	; 0xce <DIO_SetPinDir+0x62>
  84:	2f c0       	rjmp	.+94     	; 0xe4 <DIO_SetPinDir+0x78>
  86:	9a b3       	in	r25, 0x1a	; 26
  88:	21 e0       	ldi	r18, 0x01	; 1
  8a:	30 e0       	ldi	r19, 0x00	; 0
  8c:	06 2e       	mov	r0, r22
  8e:	02 c0       	rjmp	.+4      	; 0x94 <DIO_SetPinDir+0x28>
  90:	22 0f       	add	r18, r18
  92:	33 1f       	adc	r19, r19
  94:	0a 94       	dec	r0
  96:	e2 f7       	brpl	.-8      	; 0x90 <DIO_SetPinDir+0x24>
  98:	29 2b       	or	r18, r25
  9a:	2a bb       	out	0x1a, r18	; 26
  9c:	23 c0       	rjmp	.+70     	; 0xe4 <DIO_SetPinDir+0x78>
  9e:	97 b3       	in	r25, 0x17	; 23
  a0:	21 e0       	ldi	r18, 0x01	; 1
  a2:	30 e0       	ldi	r19, 0x00	; 0
  a4:	06 2e       	mov	r0, r22
  a6:	02 c0       	rjmp	.+4      	; 0xac <DIO_SetPinDir+0x40>
  a8:	22 0f       	add	r18, r18
  aa:	33 1f       	adc	r19, r19
  ac:	0a 94       	dec	r0
  ae:	e2 f7       	brpl	.-8      	; 0xa8 <DIO_SetPinDir+0x3c>
  b0:	29 2b       	or	r18, r25
  b2:	27 bb       	out	0x17, r18	; 23
  b4:	17 c0       	rjmp	.+46     	; 0xe4 <DIO_SetPinDir+0x78>
  b6:	94 b3       	in	r25, 0x14	; 20
  b8:	21 e0       	ldi	r18, 0x01	; 1
  ba:	30 e0       	ldi	r19, 0x00	; 0
  bc:	06 2e       	mov	r0, r22
  be:	02 c0       	rjmp	.+4      	; 0xc4 <DIO_SetPinDir+0x58>
  c0:	22 0f       	add	r18, r18
  c2:	33 1f       	adc	r19, r19
  c4:	0a 94       	dec	r0
  c6:	e2 f7       	brpl	.-8      	; 0xc0 <DIO_SetPinDir+0x54>
  c8:	29 2b       	or	r18, r25
  ca:	24 bb       	out	0x14, r18	; 20
  cc:	0b c0       	rjmp	.+22     	; 0xe4 <DIO_SetPinDir+0x78>
  ce:	91 b3       	in	r25, 0x11	; 17
  d0:	21 e0       	ldi	r18, 0x01	; 1
  d2:	30 e0       	ldi	r19, 0x00	; 0
  d4:	06 2e       	mov	r0, r22
  d6:	02 c0       	rjmp	.+4      	; 0xdc <DIO_SetPinDir+0x70>
  d8:	22 0f       	add	r18, r18
  da:	33 1f       	adc	r19, r19
  dc:	0a 94       	dec	r0
  de:	e2 f7       	brpl	.-8      	; 0xd8 <DIO_SetPinDir+0x6c>
  e0:	29 2b       	or	r18, r25
  e2:	21 bb       	out	0x11, r18	; 17
  e4:	81 30       	cpi	r24, 0x01	; 1
  e6:	91 f0       	breq	.+36     	; 0x10c <DIO_SetPinDir+0xa0>
  e8:	28 f0       	brcs	.+10     	; 0xf4 <DIO_SetPinDir+0x88>
  ea:	82 30       	cpi	r24, 0x02	; 2
  ec:	d9 f0       	breq	.+54     	; 0x124 <DIO_SetPinDir+0xb8>
  ee:	83 30       	cpi	r24, 0x03	; 3
  f0:	29 f1       	breq	.+74     	; 0x13c <DIO_SetPinDir+0xd0>
  f2:	08 95       	ret
  f4:	2a b3       	in	r18, 0x1a	; 26
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	02 c0       	rjmp	.+4      	; 0x100 <DIO_SetPinDir+0x94>
  fc:	88 0f       	add	r24, r24
  fe:	99 1f       	adc	r25, r25
 100:	6a 95       	dec	r22
 102:	e2 f7       	brpl	.-8      	; 0xfc <DIO_SetPinDir+0x90>
 104:	80 95       	com	r24
 106:	82 23       	and	r24, r18
 108:	8a bb       	out	0x1a, r24	; 26
 10a:	08 95       	ret
 10c:	27 b3       	in	r18, 0x17	; 23
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	02 c0       	rjmp	.+4      	; 0x118 <DIO_SetPinDir+0xac>
 114:	88 0f       	add	r24, r24
 116:	99 1f       	adc	r25, r25
 118:	6a 95       	dec	r22
 11a:	e2 f7       	brpl	.-8      	; 0x114 <DIO_SetPinDir+0xa8>
 11c:	80 95       	com	r24
 11e:	82 23       	and	r24, r18
 120:	87 bb       	out	0x17, r24	; 23
 122:	08 95       	ret
 124:	24 b3       	in	r18, 0x14	; 20
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	02 c0       	rjmp	.+4      	; 0x130 <DIO_SetPinDir+0xc4>
 12c:	88 0f       	add	r24, r24
 12e:	99 1f       	adc	r25, r25
 130:	6a 95       	dec	r22
 132:	e2 f7       	brpl	.-8      	; 0x12c <DIO_SetPinDir+0xc0>
 134:	80 95       	com	r24
 136:	82 23       	and	r24, r18
 138:	84 bb       	out	0x14, r24	; 20
 13a:	08 95       	ret
 13c:	21 b3       	in	r18, 0x11	; 17
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	02 c0       	rjmp	.+4      	; 0x148 <DIO_SetPinDir+0xdc>
 144:	88 0f       	add	r24, r24
 146:	99 1f       	adc	r25, r25
 148:	6a 95       	dec	r22
 14a:	e2 f7       	brpl	.-8      	; 0x144 <DIO_SetPinDir+0xd8>
 14c:	80 95       	com	r24
 14e:	82 23       	and	r24, r18
 150:	81 bb       	out	0x11, r24	; 17
 152:	08 95       	ret

00000154 <DIO_TogglePin>:

void DIO_TogglePin(uint8 Port,uint8 Pin){
	switch(Port){
 154:	81 30       	cpi	r24, 0x01	; 1
 156:	89 f0       	breq	.+34     	; 0x17a <DIO_TogglePin+0x26>
 158:	28 f0       	brcs	.+10     	; 0x164 <DIO_TogglePin+0x10>
 15a:	82 30       	cpi	r24, 0x02	; 2
 15c:	c9 f0       	breq	.+50     	; 0x190 <DIO_TogglePin+0x3c>
 15e:	83 30       	cpi	r24, 0x03	; 3
 160:	11 f1       	breq	.+68     	; 0x1a6 <DIO_TogglePin+0x52>
 162:	08 95       	ret
		case DIO_PORTA :
		Toggle_BIT(PORTA,Pin);
 164:	2b b3       	in	r18, 0x1b	; 27
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	02 c0       	rjmp	.+4      	; 0x170 <DIO_TogglePin+0x1c>
 16c:	88 0f       	add	r24, r24
 16e:	99 1f       	adc	r25, r25
 170:	6a 95       	dec	r22
 172:	e2 f7       	brpl	.-8      	; 0x16c <DIO_TogglePin+0x18>
 174:	82 27       	eor	r24, r18
 176:	8b bb       	out	0x1b, r24	; 27
		break;
 178:	08 95       	ret
		case DIO_PORTB:
		Toggle_BIT(PORTB,Pin);
 17a:	28 b3       	in	r18, 0x18	; 24
 17c:	81 e0       	ldi	r24, 0x01	; 1
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	02 c0       	rjmp	.+4      	; 0x186 <DIO_TogglePin+0x32>
 182:	88 0f       	add	r24, r24
 184:	99 1f       	adc	r25, r25
 186:	6a 95       	dec	r22
 188:	e2 f7       	brpl	.-8      	; 0x182 <DIO_TogglePin+0x2e>
 18a:	82 27       	eor	r24, r18
 18c:	88 bb       	out	0x18, r24	; 24
		break;
 18e:	08 95       	ret
		case DIO_PORTC :
		Toggle_BIT(PORTC,Pin);
 190:	25 b3       	in	r18, 0x15	; 21
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	02 c0       	rjmp	.+4      	; 0x19c <DIO_TogglePin+0x48>
 198:	88 0f       	add	r24, r24
 19a:	99 1f       	adc	r25, r25
 19c:	6a 95       	dec	r22
 19e:	e2 f7       	brpl	.-8      	; 0x198 <DIO_TogglePin+0x44>
 1a0:	82 27       	eor	r24, r18
 1a2:	85 bb       	out	0x15, r24	; 21
		break;
 1a4:	08 95       	ret
		case DIO_PORTD :
		Toggle_BIT(PORTD,Pin);
 1a6:	22 b3       	in	r18, 0x12	; 18
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	02 c0       	rjmp	.+4      	; 0x1b2 <DIO_TogglePin+0x5e>
 1ae:	88 0f       	add	r24, r24
 1b0:	99 1f       	adc	r25, r25
 1b2:	6a 95       	dec	r22
 1b4:	e2 f7       	brpl	.-8      	; 0x1ae <DIO_TogglePin+0x5a>
 1b6:	82 27       	eor	r24, r18
 1b8:	82 bb       	out	0x12, r24	; 18
 1ba:	08 95       	ret

000001bc <Set_global_interrupt>:
	
	SET_BIT(GICR,7);
	
	#if EXT_INT0_TRIGGER  ==  TRIGGER_RISING
	SET_BIT(MCUCR,2);
	SET_BIT(MCUCR,3);
 1bc:	8f b7       	in	r24, 0x3f	; 63
 1be:	80 68       	ori	r24, 0x80	; 128
 1c0:	8f bf       	out	0x3f, r24	; 63
 1c2:	08 95       	ret

000001c4 <EXT_INT2_Init>:
	#endif
}
//ur assinment
void EXT_INT2_Init(void)
{
	Set_global_interrupt();
 1c4:	0e 94 de 00 	call	0x1bc	; 0x1bc <Set_global_interrupt>
	
	SET_BIT(GICR,5);
 1c8:	8b b7       	in	r24, 0x3b	; 59
 1ca:	80 62       	ori	r24, 0x20	; 32
 1cc:	8b bf       	out	0x3b, r24	; 59
	
	SET_BIT(MCUCSR,6);
 1ce:	84 b7       	in	r24, 0x34	; 52
 1d0:	80 64       	ori	r24, 0x40	; 64
 1d2:	84 bf       	out	0x34, r24	; 52
 1d4:	08 95       	ret

000001d6 <LEDO_init>:
void LED0_ON(void){
	DIO_SetPinVal(DIO_PORTC,DIO_PIN2,DIO_PIN_HIGH);
}
void LED0_OFF(void){
	//CLR_BIT(PORTC,2);
	DIO_SetPinVal(DIO_PORTC,DIO_PIN2,DIO_PIN_LOW);
 1d6:	41 e0       	ldi	r20, 0x01	; 1
 1d8:	62 e0       	ldi	r22, 0x02	; 2
 1da:	82 e0       	ldi	r24, 0x02	; 2
 1dc:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
 1e0:	08 95       	ret

000001e2 <LED0_TOGGLE>:
}
void LED0_TOGGLE(void){
	//Toggle_BIT(PORTC,2);
	DIO_TogglePin(DIO_PORTC,DIO_PIN2);
 1e2:	62 e0       	ldi	r22, 0x02	; 2
 1e4:	82 e0       	ldi	r24, 0x02	; 2
 1e6:	0e 94 aa 00 	call	0x154	; 0x154 <DIO_TogglePin>
 1ea:	08 95       	ret

000001ec <main>:

int main(void)
{
	
	
   LEDO_init();
 1ec:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <LEDO_init>
   //External_INT0_INit();
   EXT_INT2_Init();
 1f0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <EXT_INT2_Init>
 1f4:	ff cf       	rjmp	.-2      	; 0x1f4 <main+0x8>

000001f6 <__vector_3>:
    {
    }
}

ISR(INT2_vect)
{
 1f6:	1f 92       	push	r1
 1f8:	0f 92       	push	r0
 1fa:	0f b6       	in	r0, 0x3f	; 63
 1fc:	0f 92       	push	r0
 1fe:	11 24       	eor	r1, r1
 200:	2f 93       	push	r18
 202:	3f 93       	push	r19
 204:	4f 93       	push	r20
 206:	5f 93       	push	r21
 208:	6f 93       	push	r22
 20a:	7f 93       	push	r23
 20c:	8f 93       	push	r24
 20e:	9f 93       	push	r25
 210:	af 93       	push	r26
 212:	bf 93       	push	r27
 214:	ef 93       	push	r30
 216:	ff 93       	push	r31
	LED0_TOGGLE();
 218:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LED0_TOGGLE>
	
 21c:	ff 91       	pop	r31
 21e:	ef 91       	pop	r30
 220:	bf 91       	pop	r27
 222:	af 91       	pop	r26
 224:	9f 91       	pop	r25
 226:	8f 91       	pop	r24
 228:	7f 91       	pop	r23
 22a:	6f 91       	pop	r22
 22c:	5f 91       	pop	r21
 22e:	4f 91       	pop	r20
 230:	3f 91       	pop	r19
 232:	2f 91       	pop	r18
 234:	0f 90       	pop	r0
 236:	0f be       	out	0x3f, r0	; 63
 238:	0f 90       	pop	r0
 23a:	1f 90       	pop	r1
 23c:	18 95       	reti

0000023e <_exit>:
 23e:	f8 94       	cli

00000240 <__stop_program>:
 240:	ff cf       	rjmp	.-2      	; 0x240 <__stop_program>
